// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwipeWords.MemoryRecall.Data;

#nullable disable

namespace SwipeWords.Migrations.MemoryRecallDatabase
{
    [DbContext(typeof(MemoryRecallDatabaseContext))]
    partial class MemoryRecallDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SwipeWords.MemoryRecall.Data.SpeedReadingText", b =>
                {
                    b.Property<Guid>("SpeedReadingTextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpeedReadingTextId");

                    b.ToTable("SpeedReadingTexts");
                });

            modelBuilder.Entity("SwipeWords.MemoryRecall.Data.UserMemoryRecall", b =>
                {
                    b.Property<Guid>("MemoryRecallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RemovedWordPositions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SpeedReadingTextId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MemoryRecallId");

                    b.HasIndex("SpeedReadingTextId");

                    b.ToTable("UserMemoryRecalls");
                });

            modelBuilder.Entity("SwipeWords.MemoryRecall.Data.UserMemoryRecall", b =>
                {
                    b.HasOne("SwipeWords.MemoryRecall.Data.SpeedReadingText", "SpeedReadingText")
                        .WithMany()
                        .HasForeignKey("SpeedReadingTextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpeedReadingText");
                });
#pragma warning restore 612, 618
        }
    }
}
